# this is a Jinja2 template file used during the Ansible deployment
# environment specific configuration can be found in our Ansble scripts
---
services:
  app:
    image: ghcr.io/{{ template.git.package.image_name }}:{{ template.git.package.tag }}
    container_name: {{ template.name }}_app
    restart: unless-stopped
    ports:
      - "{{ template.env.host_app_port }}:8000"
    environment:
      - DEBUG={{ template.env.debug_flag }}
      - DJANGO_SECRET_KEY={{ template.env.secret_key }}
      - DJANGO_ALLOWED_HOSTS={{ template.env.allowed_hosts }}
      - DJANGO_CSRF_TRUSTED_ORIGINS={{ template.env.trusted_origins }}
      - DB_HOST=db
      - DB_PORT={{ template.env.host_db_port }}
      - DB_NAME={{ template.env.db_name }}
      - DB_USER={{ template.env.db_user }}
      - DB_PASSWORD={{ template.env.db_pass }}
    command: >
        sh -c "poetry run python3 manage.py migrate &&
               poetry run python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - dj-static:/app/staticfiles
      - dj-media:/app/media
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:12
    container_name: {{ template.name }}_db
    restart: unless-stopped
    volumes:
      - pg-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB={{ template.env.db_name }}
      - POSTGRES_USER={{ template.env.db_user }}
      - POSTGRES_PASSWORD={{ template.env.db_pass }}
      - POSTGRES_HOST=db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ template.env.db_user }}"]
      interval: 5s
      timeout: 5s
      retries: 5

# external volumes managed and defined by ansible
volumes:
  dj-static:
    name: "{{ template.name }}_app-static-vol"
    external: true
  dj-media:
    name: "{{ template.name }}_app-media-vol"
    external: true
  pg-data:
    name: "{{ template.name }}_db-vol"
    external: true
